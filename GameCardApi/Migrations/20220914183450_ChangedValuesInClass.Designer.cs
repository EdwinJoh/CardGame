// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace CardGameApi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20220914183450_ChangedValuesInClass")]
    partial class ChangedValuesInClass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.7.22376.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int>("Suits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("Entities.Models.CardHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardFiveId")
                        .HasColumnType("int");

                    b.Property<int>("CardFourId")
                        .HasColumnType("int");

                    b.Property<int>("CardOneId")
                        .HasColumnType("int");

                    b.Property<int>("CardThreeId")
                        .HasColumnType("int");

                    b.Property<int>("CardTwoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardFiveId");

                    b.HasIndex("CardFourId");

                    b.HasIndex("CardOneId");

                    b.HasIndex("CardThreeId");

                    b.HasIndex("CardTwoId");

                    b.ToTable("CardHistories");
                });

            modelBuilder.Entity("Entities.Models.CardHistory", b =>
                {
                    b.HasOne("Entities.Models.Card", "CardFive")
                        .WithMany()
                        .HasForeignKey("CardFiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Card", "CardFour")
                        .WithMany()
                        .HasForeignKey("CardFourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Card", "CardOne")
                        .WithMany()
                        .HasForeignKey("CardOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Card", "CardThree")
                        .WithMany()
                        .HasForeignKey("CardThreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Card", "CardTwo")
                        .WithMany()
                        .HasForeignKey("CardTwoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardFive");

                    b.Navigation("CardFour");

                    b.Navigation("CardOne");

                    b.Navigation("CardThree");

                    b.Navigation("CardTwo");
                });
#pragma warning restore 612, 618
        }
    }
}
