@page "/"
@inject IRequestService _request
<link rel="stylesheet" href="_content/Radzen.Blazor/css/default-base.css">
<link rel="stylesheet" href="_content/Radzen.Blazor/css/default.css">


@if (CardDeck is null)
{

    <p> loading..</p>
}
else
{
    @if (!GameStarted)
    {
        <div class="wrap" style="width:100%">
            <div>
                <div class="wrap" style="width: 100%" align="center">

                    <button class="button" @onclick="(() => StartGame())">Start Game</button>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">

            @foreach (var card in FiveCards)
            {
                <CardComponent CardInDeck="card" column="4" />

            }
        </div>
        <RadzenButton Click=@(args => OnClick()) Text="Replace Cards" Icon="refresh" ButtonStyle="ButtonStyle.Success" />
    }
}







@code {

    private List<Card> CardDeck = new List<Card>();
    private List<Card> FiveCards = new List<Card>();
    private List<Card> RemovedCards;
    private bool GameStarted = false;
    private int cardsToReplace;

    protected override async Task OnInitializedAsync()
    {
        CardDeck = await _request.GetNewDeck();
    }
    private void StartGame()
    {
        FiveCards = CardDeck.Take(5).ToList();

        GameStarted = true;
    }
    private void OnClick()
    {
        cardsToReplace = FiveCards.Count(x => x.IsChecked);
        CardDeck.RemoveAll(x => x.IsChecked == true);
        FiveCards.RemoveAll(x => x.IsChecked == true);
        AddNewCards(cardsToReplace);
    }
    private void RemoveSelectedCard()
    {
        foreach (var card in FiveCards)
        {

            if (card.IsChecked)
            {

                FiveCards.Remove(card);
            }
        }
    }
    private void AddNewCards(int cardsToReplace)
    {
        CardDeck.Reverse();
        foreach (var card in CardDeck)
        {
            if (FiveCards.Count != 5 && !FiveCards.Contains(card))
            {
                FiveCards.Add(card);
            }
        }

    }
}

